http:
  routers:
    api-router:
      rule: "Host(`api.example.com`)"
      service: "api-service"
      middlewares:
        - "auth"
        - "rate-limit"
    
    web-router:
      rule: "Host(`web.example.com`) && PathPrefix(`/app`)"
      service: "web-service"
      middlewares:
        - "compress"
    
    secure-router:
      rule: "Host(`secure.example.com`)"
      service: "secure-service"
      entryPoints:
        - "websecure"
      tls: {}

  services:
    api-service:
      loadBalancer:
        servers:
          - url: "http://whoami:80"
        healthCheck:
          path: "/health"
          interval: "30s"
    
    web-service:
      loadBalancer:
        servers:
          - url: "http://nginx:80"
          - url: "http://nginx:80"
        sticky:
          cookie:
            name: "traefik"
    
    secure-service:
      loadBalancer:
        servers:
          - url: "http://redis:6379"

  middlewares:
    auth:
      basicAuth:
        users:
          - "admin:$2y$10$..."
    
    rate-limit:
      rateLimit:
        burst: 100
        average: 50
    
    compress:
      compress: {}
    
    cors:
      headers:
        accessControlAllowMethods:
          - "GET"
          - "POST"
          - "PUT"
        accessControlAllowOriginList:
          - "*"

  serversTransports:
    custom-transport:
      serverName: "custom.example.com"
      insecureSkipVerify: true

tcp:
  routers:
    redis-router:
      rule: "HostSNI(`redis.example.com`)"
      service: "redis-service"
      entryPoints:
        - "tcp-ep"
    
    ssh-router:
      rule: "HostSNI(`ssh.example.com`)"
      service: "ssh-service"
      entryPoints:
        - "tcp-ep"

  services:
    redis-service:
      loadBalancer:
        servers:
          - address: "redis:6379"
    
    ssh-service:
      loadBalancer:
        servers:
          - address: "tcp-echo:8080"

  middlewares:
    tcp-rate-limit:
      inFlightConn:
        amount: 10

udp:
  routers:
    dns-router:
      service: "dns-service"
      entryPoints:
        - "udp-ep"
    
    syslog-router:
      service: "syslog-service"
      entryPoints:
        - "udp-ep"

  services:
    dns-service:
      loadBalancer:
        servers:
          - address: "udp-echo:8080"
    
    syslog-service:
      loadBalancer:
        servers:
          - address: "udp-echo:8080"

tls:
  certificates:
    - certFile: "/etc/ssl/certs/example.crt"
      keyFile: "/etc/ssl/private/example.key"
      stores:
        - "default"
  
  options:
    default:
      minVersion: "VersionTLS12"
      cipherSuites:
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
  
  stores:
    default:
      defaultCertificate:
        certFile: "/etc/ssl/certs/default.crt"
        keyFile: "/etc/ssl/private/default.key"
