displayName: Provider Plugin Demo
type: provider

import: github.com/zalbiraw/traefikprovider

summary: 'Traefik provider that allows you to discover other Traefik instances configuration. The plugin lets you filter and override discovered config, group discovered services, and introduces a tunneling concept for services.'

testData:
  pollInterval: "5s"
  providers:
  - name: "cluster-1"
    connection:
      host: "localhost"
      port: 8080
      path: "/api/rawdata"
      timeout: "15s"
      headers: {}
      # mTLS:
      #   caFile: /path/to/ca.crt
      #   certFile: /path/to/cert.crt
      #   keyFile: /path/to/key
    tunnels:
      - name: "web-tunnel"
        addresses: [
          "http://tunnel-web-1:8080",
          "http://tunnel-web-2:8080"
        ]
      - name: "tcp-tunnel"
        addresses: [
          "tcp-tunnel-1:5432",
          "tcp-tunnel-2:5432"
        ]
      - name: "udp-tunnel"
        addresses: [
          "udp-tunnel-1:9000",
          "udp-tunnel-2:9000"
        ]
    http:
      discover: true
      routers:
        discover: true
        discoverPriority: false
        matcher: ""
        overrides:
          rules:
          # Set
          - value: "Host(`app.traefik.cloud`)"
            matcher: ""
          # Regex
          - value: "$1 && PathPrefix(`/api/`)"
            matcher: ""
          entrypoints:
          # Set
          - value: ["websecure"]
            matcher: "Entrypoint(`web`)"
          # Append
          - value: "websecure"
            matcher: "Entrypoint(`web`)"
          services:
          # Set
          - value: "apps"
            matcher: "ServiceRegexp(`app[123]`)"
          # Regex
          - value: "$1-service"
            matcher: "ServiceRegexp(`app[123]`)"
          middlewares:
          # Set
          - value: ["jwt", "ratelimit"]
            matcher: "Entrypoint(`web`)"
          # Append, if prepend is required, it can bed done at entrypoint level, this allows the notation to be simple
          - value: "ratelimit"
            matcher: "NameRegexp(`app[123]`)"
        extraRoutes: []
      middlewares: 
        discover: true
        matcher: ""
        extraMiddlewares: []
      services:
        discover: true
        matcher: ""
        overrides:
          servers:
          # Override web-app with specific servers
          - strategy: "wrr"
            value: ["http://new-web-app-1:80", "http://new-web-app-2:80"]
            matcher: "Name(`web-app`)"
          # Override api-service with tunnel
          - tunnel: "web-tunnel"
            matcher: "Name(`api-service`)"
          # Override load-balanced-app servers using regex
          - strategy: "p2c"
            value: ["http://production-lb:80"]
            matcher: "NameRegexp(`load-balanced.*`)"
          healthchecks:
          - path: "/api/health"
            interval: "10s"
            timeout: "3s"
            matcher: "Name(`health-checked-app`)"
        extraServices: []
    tcp:
      discover: true
      routers:
        discover: true
        matcher: ""
        overrides:
          rules:
          # Set
          - value: "HostSNI(`app.traefik.cloud`)"
            matcher: ""
          # Regex
          - value: "$1 && HostSNI(`dev.app.traefik`)"
            matcher: ""
          entrypoints:
          # Set
          - value: ["websecure"]
            matcher: "Entrypoint(`web`)"
          # Append
          - value: "websecure"
            matcher: "Entrypoint(`web`)"
          services:
          # Set
          - value: "apps"
            matcher: "ServiceRegexp(`app[123]`)"
          # Regex
          - value: "$1-service"
            matcher: "ServiceRegexp(`app[123]`)"
          middlewares:
          # Set
          - value: ["ip-allow-list"]
            matcher: "Entrypoint(`web`)"
          # Append
          - value: "internal-network-allow-list"
            matcher: "NameRegexp(`app[123]`)"
        extraRoutes: []
      middlewares:
        discover: true
        matcher: ""
        extraMiddlewares: []
      services:
        discover: true
        matcher: ""
        overrides:
          servers:
          - strategy: ""
            value: []
            matcher: ""
          - strategy: ""
            value: ""
            matcher: ""
          - tunnel: "tunnel1"
            matcher: ""
        extraServices: []
    udp:
      discover: true
      routers:
        discover: true
        matcher: ""
        overrides:
          services:
          # Set
          - value: "apps"
            matcher: "ServiceRegexp(`app[123]`)"
          # Regex
          - value: "$1-service"
            matcher: "ServiceRegexp(`app[123]`)"
        extraRoutes: []
      services:
        discover: true
        matcher: ""
        overrides:
          servers:
          - strategy: ""
            value: []
            matcher: ""
          - strategy: ""
            value: ""
            matcher: ""
          - tunnel: "tunnel1"
            matcher: ""
        extraServices: []
    tls:
      discover: true
