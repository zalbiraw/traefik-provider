displayName: Provider Plugin Demo
type: provider

import: github.com/zalbiraw/traefik-provider

summary: 'Traefik provider that will allow you to discover other Traefik instances configuration. The plugin will allow you to filter and overide discovered config as well as group discvered services and introduces tunneling concept for services.'

testData:
  pollInterval: "5s"
  providers:
  - name: "cluster-1"
    connection:
      host: ["localhost"]
      port: 8080
      path: "/api/rawdata"
      timeout: "15s"
      headers: {}
      # mTLS:
      #   caFile: /path/to/ca.crt
      #   certFile: /path/to/cert.crt
      #   keyFile: /path/to/key
    tunnels:
      - name: "web-tunnel"
        addresses: [
          "http://tunnel-web-1:8080",
          "http://tunnel-web-2:8080"
        ]
      - name: "tcp-tunnel"
        addresses: [
          "tcp-tunnel-1:5432",
          "tcp-tunnel-2:5432"
        ]
      - name: "udp-tunnel"
        addresses: [
          "udp-tunnel-1:9000",
          "udp-tunnel-2:9000"
        ]
    http:
      discover: true
      routers:
        discover: true
        discoverPriority: false
        filters:
          name: ""
          entrypoints: []
          rule: ""
          service: ""
        overrides:
          rules:
          # Set
          - value: "Host(`app.traefik.cloud`)"
            filters: 
              rule: "Host(`app.traefik.localhost`)"
          # Regex
          - value: "$1 && PathPrefix(`/api/`)"
            filters: 
              rule: "Host(`app.traefik`) && PathPrefix(`/api/`)"
          entrypoints:
          # Set
          - value: ["websecure"]
            filters: 
              entrypoints: ["web"]
          # Append
          - value: "websecure"
            filters: 
              entrypoints: ["web"]
          services:
          # Set
          - value: "apps"
            filters: 
              service: "app[123]"
          # Regex
          - value: "$1-service"
            filters: 
              service: "app[123]"
          middlewares:
          # Set
          - value: ["jwt", "ratelimit"]
            filters: 
              entrypoints: ["web"]
          # Append, if prepend is required, it can bed done at entrypoint level, this allows the notation to be simple
          - value: "ratelimit"
            filters: 
              name: "app[123]"
        extraRoutes: []
      middlewares: 
        discover: true
        filters:
          name: ""
        extraMiddlewares: []
      services:
        discover: true
        filters:
          name: ""
        overrides:
          servers:
          # Override web-app with specific servers
          - strategy: "wrr"
            value: ["http://new-web-app-1:80", "http://new-web-app-2:80"]
            filters: 
              name: "web-app"
          # Override api-service with tunnel
          - tunnel: "web-tunnel"
            filters: 
              name: "api-service"
          # Override load-balanced-app servers using regex
          - strategy: "p2c"
            value: ["http://production-lb:80"]
            filters: 
              name: "load-balanced.*"
          healthchecks:
          - path: "/api/health"
            interval: "10s"
            timeout: "3s"
            filters: 
              name: "health-checked-app"
        extraServices: []
    tcp:
      discover: true
      routers:
        discover: true
        filters:
          name: ""
          entrypoints: []
          rule: ""
          service: ""
        overrides:
          rules:
          # Set
          - value: "HostSNI(`app.traefik.cloud`)"
            filters: 
              rule: "HostSNI(`app.traefik.localhost`)"
          # Regex
          - value: "$1 && HostSNI(`dev.app.traefik`)"
            filters: 
              rule: "HostSNI(`app.traefik`)"
          entrypoints:
          # Set
          - value: ["websecure"]
            filters: 
              entrypoints: ["web"]
          # Append
          - value: "websecure"
            filters: 
              entrypoints: ["web"]
          services:
          # Set
          - value: "apps"
            filters: 
              service: "app[123]"
          # Regex
          - value: "$1-service"
            filters: 
              service: "app[123]"
          middlewares:
          # Set
          - value: ["ip-allow-list"]
            filters: 
              entrypoints: ["web"]
          # Append
          - value: "internal-network-allow-list"
            filters: 
              name: "app[123]"
        extraRoutes: []
      middlewares:
        discover: true
        filters:
          name: ""
        extraMiddlewares: []
      services:
        discover: true
        filters:
          name: ""
        overrides:
          servers:
          - strategy: ""
            value: []
            filters: {}
          - strategy: ""
            value: ""
            filters: {}
          - tunnel: "tunnel1"
            filters: {}
        extraServices: []
    udp:
      discover: true
      routers:
        discover: true
        filters:
          name: ""
          entrypoints: []
          service: ""
        overrides:
          services:
          # Set
          - value: "apps"
            filters: 
              service: "app[123]"
          # Regex
          - value: "$1-service"
            filters: 
              service: "app[123]"
        extraRoutes: []
      services:
        discover: true
        filters:
          name: ""
        overrides:
          servers:
          - strategy: ""
            value: []
            filters: {}
          - strategy: ""
            value: ""
            filters: {}
          - tunnel: "tunnel1"
            filters: {}
        extraServices: []
    tls:
      discover: true
